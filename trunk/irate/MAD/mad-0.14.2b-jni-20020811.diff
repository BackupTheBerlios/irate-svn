diff -u -r -N mad-0.14.2b.orig/MAD_MadPlayer.h mad-0.14.2b/MAD_MadPlayer.h
--- mad-0.14.2b.orig/MAD_MadPlayer.h	Thu Jan  1 01:00:00 1970
+++ mad-0.14.2b/MAD_MadPlayer.h	Thu Aug  8 04:26:55 2002
@@ -0,0 +1,26 @@
+/* DO NOT EDIT THIS FILE - it is machine generated */
+#include <jni.h>
+/* Header for class MAD_MadPlayer */
+
+#ifndef _Included_MAD_MadPlayer
+#define _Included_MAD_MadPlayer
+#ifdef __cplusplus
+extern "C" {
+#endif
+/* Inaccessible static: libpaths */
+/* Inaccessible static: archs */
+/* Inaccessible static: osNames */
+#undef MAD_MadPlayer_debug
+#define MAD_MadPlayer_debug 1L
+/*
+ * Class:     MAD_MadPlayer
+ * Method:    nativeMain
+ * Signature: ([Ljava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_MAD_MadPlayer_nativeMain
+  (JNIEnv *, jobject, jobjectArray);
+
+#ifdef __cplusplus
+}
+#endif
+#endif
diff -u -r -N mad-0.14.2b.orig/jnidefs.h mad-0.14.2b/jnidefs.h
--- mad-0.14.2b.orig/jnidefs.h	Thu Jan  1 01:00:00 1970
+++ mad-0.14.2b/jnidefs.h	Thu Aug  8 03:34:09 2002
@@ -0,0 +1,17 @@
+# if !defined(__JNI_DEFS) && defined(JNI)
+# define __JNI_DEFS
+
+# if defined(JNI)
+  /**
+   * Needed for callbacks to Java class methods.
+   * When using JNI, we want to read console input
+   * via the caller class' "int readkey()" and not
+   * directly from console.
+   */
+# define JNI_READKEY_METHODNAME "readkey"
+# define JNI_READKEY_ARGS "(I)I"
+# define JNI_FIREMADEVENT_METHODNAME "fireMadEvent"
+# define JNI_FIREMADEVENT_ARGS "(Ljava/lang/String;)V"
+# endif
+
+# endif
\ No newline at end of file
diff -u -r -N mad-0.14.2b.orig/madplay.c mad-0.14.2b/madplay.c
--- mad-0.14.2b.orig/madplay.c	Fri Nov  9 01:58:45 2001
+++ mad-0.14.2b/madplay.c	Sun Aug 11 22:14:09 2002
@@ -50,6 +50,26 @@
 # include "audio.h"
 # include "player.h"
 
+# if defined(JNI)
+# include <jni.h>
+# include "MAD_MadPlayer.h"
+JNIEnv *_env;
+jobject _jobj;
+jobjectArray _arr;
+int _argc;
+char **_argv;
+char **_argv_jni;
+jstring *_jstr;
+/* we need to set these variables in getopt1.c before
+   calling getopt_long when using JNI because they have to
+   be set to some default values every time before parsing
+   options */
+extern int optind;
+extern int opterr;
+# endif
+
+void _cleanup();
+
 # define FADE_DEFAULT	"0:05"
 
 # if defined(EXPERIMENTAL)
@@ -101,7 +121,7 @@
 char const *argv0;
 
 # define EPUTS(str)	fputs((str), stderr)
-
+
 /*
  * NAME:	show_usage()
  * DESCRIPTION:	display usage message
@@ -238,7 +258,8 @@
   va_start(args, message);
   verror(message, args);
   va_end(args);
-
+
+  _cleanup();
   exit(1);
 }
 
@@ -403,11 +424,21 @@
  * DESCRIPTION:	parse command-line options or die
  */
 static
-void get_options(int argc, char *argv[], struct player *player)
+void get_options(int argc, char **argv, struct player *player)
 {
   int opt, index;
   int ttyset = 0;
-
+
+# if defined(JNI)
+  /*
+  player->options |= PLAYER_OPTION_TTYCONTROL;
+  ttyset = 1;
+  */
+  /* reset variables on which getopt_long depends */
+  optind = 1;
+  opterr = 1;
+# endif
+
   while ((opt = getopt_long(argc, argv,
 			    "vqQ"	/* verbosity options */
 			    "i"		/* decoding options */
@@ -418,7 +449,7 @@
 			    "12mS"	/* channel selection options */
 			    "s:t:zr::"	/* playback options */
 			    "Vh",	/* miscellaneous options */
-			    options, &index)) != -1) {
+			    options, &index)) != -1) {
     switch (opt) {
     case 0:
       break;
@@ -429,11 +460,12 @@
       break;
 
     case 'a':
-      player->output.attenuation = get_decibels(optarg);
+	  player->output.attenuation = get_decibels(optarg);
       break;
 
     case -'a':
-      printf("%s\n", mad_author);
+      printf("%s\n", mad_author);
+	  _cleanup();
       exit(0);
 
     case 'b':
@@ -443,7 +475,6 @@
 
       player->output.precision_in = opt;
       break;
-
 # if defined(USE_TTY)
     case -'c':
       player->options |= PLAYER_OPTION_TTYCONTROL;
@@ -454,7 +485,7 @@
       player->options &= ~PLAYER_OPTION_TTYCONTROL;
       ttyset = 1;
       break;
-# endif
+# endif
 
     case 'd':
       player->output.mode = AUDIO_MODE_ROUND;
@@ -472,7 +503,8 @@
 # endif
 
     case 'h':
-      show_usage(1);
+      show_usage(1);
+	  _cleanup();
       exit(0);
 
     case 'i':
@@ -486,7 +518,8 @@
       break;
 
     case -'l':
-      ver_license(stdout);
+      ver_license(stdout);
+	  _cleanup();
       exit(0);
 
     case 'm':
@@ -548,13 +581,14 @@
       break;
 
     case 'v':
-      player->verbosity = +1;
+      player->verbosity = +1;
       break;
 
     case 'V':
       ver_banner(stdout);
       fprintf(stderr, _("`%s --license' for licensing information.\n"), argv0);
-      fprintf(stderr, _("Build options: %s\n"), mad_build);
+      fprintf(stderr, _("Build options: %s\n"), mad_build);
+	  _cleanup();
       exit(0);
 
 # if 0
@@ -568,7 +602,8 @@
       break;
 
     case '?':
-      show_usage(0);
+      show_usage(0);
+	  _cleanup();
       exit(1);
 
     default:
@@ -577,7 +612,8 @@
   }
 
   if (optind == argc) {
-    show_usage(0);
+    show_usage(0);
+	_cleanup();
     exit(2);
   }
 }
@@ -585,13 +621,84 @@
 /*
  * NAME:	main()
  * DESCRIPTION:	program entry point
- */
-int main(int argc, char *argv[])
+ */
+# if defined(JNI)
+JNIEXPORT jint JNICALL Java_MAD_MadPlayer_nativeMain(
+		               JNIEnv *env, jobject jobj, jobjectArray arr)
+/*
+JNIEXPORT jint JNICALL Java_MAD_MadPlayer_nativeMain(
+		               JNIEnv *env, jobject jobj, jbyteArray arr)
+*/
+# else
+int main(int _argc, char *const *_argv)
+# endif
 {
   struct player player;
-  int result = 0;
+  int result = 0;
+
+# if defined(JNI)
+  /* initialize argc and argv from the String[] given
+     by the calling Java class instance */
+  int i;
+  _argc = (int) (*env)->GetArrayLength(env, arr) + 1;
+  _argv = malloc(sizeof(char*)*_argc);
+  _argv_jni = malloc(sizeof(char*)*_argc);
+  _jstr = (jstring*) malloc(sizeof(jstring)*(_argc-1));
+  for (i=1; i<_argc; i++) {
+	/* This strange way to process Java strings is
+	   required to correctly transform special characters,
+	   e.g. German umlauts. */
+	jclass cls;
+	jmethodID mid;
+	jbyteArray bytes;
+	jint len;
+    _jstr[i-1] = (*env)->GetObjectArrayElement(env, arr, i-1);
+	cls = (*env)->GetObjectClass(env, _jstr[i-1]);
+	mid = (*env)->GetMethodID(env, cls, "getBytes", "()[B");
+	bytes = (jbyteArray) (*env)->CallObjectMethod(env, _jstr[i-1], mid);
+	len = (*env)->GetArrayLength(env, bytes);
+	_argv_jni[i] = (char*) malloc(len+1);
+	(*env)->GetByteArrayRegion(env, bytes, 0, len, (jbyte*)_argv_jni[i]);
+	(*env)->DeleteLocalRef(env, bytes);
+	_argv_jni[i][len] = 0;
+	//_argv_jni[i] = (*env)->GetStringUTFChars(env, _jstr[i-1], 0);
+	_argv[i] = (char*) malloc(strlen(_argv_jni[i])+1);
+	strcpy(_argv[i], _argv_jni[i]);
+	//printf("Option #%d: \"%s\"\n", i, _argv[i]);
+  }
+  _argv[0] = "madplay.dll";
+  _env = env;
+  _jobj = jobj;
+  _arr = arr;
+  
+  /*
+  jsize len;
+  jbyte *body;
+  _argc = 3;
+  _argv = malloc(sizeof(char*)*3);
+  _argv_jni = malloc(sizeof(char*)*3);
+  _argv[0] = "-v";
+  _argv[1] = "--tty-control";
+  _argv_jni[0] = "-v";
+  _argv_jni[1] = "--tty-control";
+  len = (*env)->GetArrayLength(env, arr);
+  printf("len = %d\n", len);
+  *body = (*env)->GetIntArrayElements(env, arr, 0);
+  _argv[2] = malloc(sizeof(char)*(len+1));
+  _argv_jni[2] = malloc(sizeof(char)*(len+1));
+  for (i=0; i<len; i++) {
+    _argv[2][i] = body[i]+27;
+	_argv_jni[2][i] = body[i]+27;
+  }
+  _argv[2][len] = 0;
+  _argv_jni[2][len] = 0;
+  printf("filename = \"%s\"\n", _argv[2]);
+  printf("int value of \"c\": %d\n", 'c');
+  printf("string's first char int value: %d\n", _argv[2][0]);
+  */
+# endif
 
-  argv0 = argv[0];
+  argv0 = _argv[0];
 
   /* internationalization support */
 
@@ -610,8 +717,8 @@
   if (isatty(STDIN_FILENO))
     player.options |= PLAYER_OPTION_TTYCONTROL;
 # endif
-
-  get_options(argc, argv, &player);
+
+  get_options(_argc, _argv, &player);
 
   /* main processing */
 
@@ -644,12 +751,27 @@
 
   /* run the player */
 
-  if (player_run(&player, argc - optind, (char const **) &argv[optind]) == -1)
+  if (player_run(&player, _argc - optind, (char const **) &_argv[optind]) == -1)
     result = 4;
 
   /* finish up */
 
   player_finish(&player);
-
+
+  _cleanup();
+
   return result;
 }
+
+void _cleanup() {
+# if defined(JNI)
+  int i;
+  /* tell the JVM that we don't need these resources anymore */
+  for (i=1; i<_argc; i++) {
+   (*_env)->ReleaseStringUTFChars(_env, _jstr[i-1], _argv_jni[i]);
+  }
+  free(_argv_jni);
+  free(_argv);
+  free(_jstr);
+# endif
+}
\ No newline at end of file
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/compat.obj and mad-0.14.2b/msvc++/libid3tag/Debug/compat.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/crc.obj and mad-0.14.2b/msvc++/libid3tag/Debug/crc.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/debug.obj and mad-0.14.2b/msvc++/libid3tag/Debug/debug.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/field.obj and mad-0.14.2b/msvc++/libid3tag/Debug/field.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/file.obj and mad-0.14.2b/msvc++/libid3tag/Debug/file.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/frame.obj and mad-0.14.2b/msvc++/libid3tag/Debug/frame.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/frametype.obj and mad-0.14.2b/msvc++/libid3tag/Debug/frametype.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/genre.obj and mad-0.14.2b/msvc++/libid3tag/Debug/genre.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/latin1.obj and mad-0.14.2b/msvc++/libid3tag/Debug/latin1.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/libid3tag.lib and mad-0.14.2b/msvc++/libid3tag/Debug/libid3tag.lib differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/parse.obj and mad-0.14.2b/msvc++/libid3tag/Debug/parse.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/render.obj and mad-0.14.2b/msvc++/libid3tag/Debug/render.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/tag.obj and mad-0.14.2b/msvc++/libid3tag/Debug/tag.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/ucs4.obj and mad-0.14.2b/msvc++/libid3tag/Debug/ucs4.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/utf16.obj and mad-0.14.2b/msvc++/libid3tag/Debug/utf16.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/utf8.obj and mad-0.14.2b/msvc++/libid3tag/Debug/utf8.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/util.obj and mad-0.14.2b/msvc++/libid3tag/Debug/util.obj differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/vc50.idb and mad-0.14.2b/msvc++/libid3tag/Debug/vc50.idb differ
Binary files mad-0.14.2b.orig/msvc++/libid3tag/Debug/version.obj and mad-0.14.2b/msvc++/libid3tag/Debug/version.obj differ
diff -u -r -N mad-0.14.2b.orig/msvc++/libid3tag/libid3tag.dsp mad-0.14.2b/msvc++/libid3tag/libid3tag.dsp
--- mad-0.14.2b.orig/msvc++/libid3tag/libid3tag.dsp	Mon Oct 22 22:22:53 2001
+++ mad-0.14.2b/msvc++/libid3tag/libid3tag.dsp	Wed Aug  7 03:43:02 2002
@@ -1,5 +1,5 @@
 # Microsoft Developer Studio Project File - Name="libid3tag" - Package Owner=<4>
-# Microsoft Developer Studio Generated Build File, Format Version 6.00
+# Microsoft Developer Studio Generated Build File, Format Version 5.00
 # ** DO NOT EDIT **
 
 # TARGTYPE "Win32 (x86) Static Library" 0x0104
@@ -22,11 +22,9 @@
 !MESSAGE 
 
 # Begin Project
-# PROP AllowPerConfigDependencies 0
 # PROP Scc_ProjName ""
 # PROP Scc_LocalPath ""
 CPP=cl.exe
-RSC=rc.exe
 
 !IF  "$(CFG)" == "libid3tag - Win32 Release"
 
@@ -40,11 +38,12 @@
 # PROP Output_Dir "Release"
 # PROP Intermediate_Dir "Release"
 # PROP Target_Dir ""
+RSC=rc.exe
+# ADD BASE RSC /l 0x409 /d "NDEBUG"
+# ADD RSC /l 0x409 /d "NDEBUG"
 # ADD BASE CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "_LIB" /YX /FD /c
 # ADD CPP /nologo /GX /O2 /I "." /D "NDEBUG" /D "WIN32" /D "_MBCS" /D "_LIB" /D "HAVE_CONFIG_H" /FD /c
 # SUBTRACT CPP /YX
-# ADD BASE RSC /l 0x409 /d "NDEBUG"
-# ADD RSC /l 0x409 /d "NDEBUG"
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
@@ -64,11 +63,12 @@
 # PROP Output_Dir "Debug"
 # PROP Intermediate_Dir "Debug"
 # PROP Target_Dir ""
-# ADD BASE CPP /nologo /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /YX /FD /GZ /c
-# ADD CPP /nologo /Gm /GX /ZI /Od /I "." /D "_LIB" /D "HAVE_CONFIG_H" /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "DEBUG" /FD /GZ /c
-# SUBTRACT CPP /YX
+RSC=rc.exe
 # ADD BASE RSC /l 0x409 /d "_DEBUG"
 # ADD RSC /l 0x409 /d "_DEBUG"
+# ADD BASE CPP /nologo /W3 /GX /Od /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /YX /FD /ZI /GZ /c
+# ADD CPP /nologo /GX /O2 /I "." /D "_LIB" /D "HAVE_CONFIG_H" /D "WIN32" /D "_MBCS" /FD /ZI /GZ /c
+# SUBTRACT CPP /Z<none> /Fr /YX
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
diff -u -r -N mad-0.14.2b.orig/msvc++/libid3tag/libid3tag.plg mad-0.14.2b/msvc++/libid3tag/libid3tag.plg
--- mad-0.14.2b.orig/msvc++/libid3tag/libid3tag.plg	Thu Jan  1 01:00:00 1970
+++ mad-0.14.2b/msvc++/libid3tag/libid3tag.plg	Wed Aug  7 03:30:42 2002
@@ -0,0 +1,77 @@
+--------------------Configuration: libid3tag - Win32 Debug--------------------
+Begining build with project "M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\msvc++\libid3tag\libid3tag.dsp", at root.
+Active configuration is Win32 (x86) Static Library (based on Win32 (x86) Static Library)
+
+Project's tools are:
+			" (rc.exe)" with flags "/l 0x409 /d "_DEBUG" "
+			"32-bit C/C++ Compiler for 80x86" with flags "/nologo /MLd /GX /O2 /I "." /D "_LIB" /D "HAVE_CONFIG_H" /D "WIN32" /D "_MBCS" /Fo"Debug/" /Fd"Debug/" /FD /ZI /GZ /c "
+			"Browser Database Maker" with flags "/nologo /o"Debug/libid3tag.bsc" "
+			"Library Manager" with flags "/nologo /out:"Debug\libid3tag.lib" "
+			"Custom Build" with flags ""
+			"<Component 0xa>" with flags ""
+
+Creating temp file "C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP429.tmp" with contents </nologo /MLd /GX /O2 /I "." /D "_LIB" /D "HAVE_CONFIG_H" /D "WIN32" /D "_MBCS" /Fo"Debug/" /Fd"Debug/" /FD /ZI /GZ /c 
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\compat.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\crc.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\debug.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\field.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\file.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\frame.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\frametype.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\genre.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\latin1.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\parse.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\render.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\tag.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\ucs4.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\utf16.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\utf8.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\util.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libid3tag\version.c"
+>
+Creating command line "cl.exe @C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP429.tmp" 
+Creating temp file "C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP42A.tmp" with contents </nologo /out:"Debug\libid3tag.lib" 
+".\Debug\compat.obj"
+".\Debug\crc.obj"
+".\Debug\debug.obj"
+".\Debug\field.obj"
+".\Debug\file.obj"
+".\Debug\frame.obj"
+".\Debug\frametype.obj"
+".\Debug\genre.obj"
+".\Debug\latin1.obj"
+".\Debug\parse.obj"
+".\Debug\render.obj"
+".\Debug\tag.obj"
+".\Debug\ucs4.obj"
+".\Debug\utf16.obj"
+".\Debug\utf8.obj"
+".\Debug\util.obj"
+".\Debug\version.obj">
+Creating command line "link.exe -lib @C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP42A.tmp" 
+Compiling...
+Command line warning D4002 : ignoring unknown option '/ZI'
+Command line warning D4002 : ignoring unknown option '/GZ'
+compat.c
+crc.c
+debug.c
+field.c
+file.c
+frame.c
+frametype.c
+genre.c
+latin1.c
+parse.c
+render.c
+tag.c
+ucs4.c
+utf16.c
+utf8.c
+util.c
+version.c
+Generating Code...
+Creating library...
+
+
+
+libid3tag.lib - 0 error(s), 2 warning(s)
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/bit.obj and mad-0.14.2b/msvc++/libmad/Debug/bit.obj differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/decoder.obj and mad-0.14.2b/msvc++/libmad/Debug/decoder.obj differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/fixed.obj and mad-0.14.2b/msvc++/libmad/Debug/fixed.obj differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/frame.obj and mad-0.14.2b/msvc++/libmad/Debug/frame.obj differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/huffman.obj and mad-0.14.2b/msvc++/libmad/Debug/huffman.obj differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/layer12.obj and mad-0.14.2b/msvc++/libmad/Debug/layer12.obj differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/layer3.obj and mad-0.14.2b/msvc++/libmad/Debug/layer3.obj differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/libmad.lib and mad-0.14.2b/msvc++/libmad/Debug/libmad.lib differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/stream.obj and mad-0.14.2b/msvc++/libmad/Debug/stream.obj differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/synth.obj and mad-0.14.2b/msvc++/libmad/Debug/synth.obj differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/timer.obj and mad-0.14.2b/msvc++/libmad/Debug/timer.obj differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/vc50.idb and mad-0.14.2b/msvc++/libmad/Debug/vc50.idb differ
Binary files mad-0.14.2b.orig/msvc++/libmad/Debug/version.obj and mad-0.14.2b/msvc++/libmad/Debug/version.obj differ
diff -u -r -N mad-0.14.2b.orig/msvc++/libmad/libmad.dsp mad-0.14.2b/msvc++/libmad/libmad.dsp
--- mad-0.14.2b.orig/msvc++/libmad/libmad.dsp	Thu Oct 18 22:36:28 2001
+++ mad-0.14.2b/msvc++/libmad/libmad.dsp	Wed Aug  7 03:43:02 2002
@@ -1,5 +1,5 @@
 # Microsoft Developer Studio Project File - Name="libmad" - Package Owner=<4>
-# Microsoft Developer Studio Generated Build File, Format Version 6.00
+# Microsoft Developer Studio Generated Build File, Format Version 5.00
 # ** DO NOT EDIT **
 
 # TARGTYPE "Win32 (x86) Static Library" 0x0104
@@ -22,11 +22,9 @@
 !MESSAGE 
 
 # Begin Project
-# PROP AllowPerConfigDependencies 0
 # PROP Scc_ProjName ""
 # PROP Scc_LocalPath ""
 CPP=cl.exe
-RSC=rc.exe
 
 !IF  "$(CFG)" == "libmad - Win32 Release"
 
@@ -40,11 +38,12 @@
 # PROP Output_Dir "Release"
 # PROP Intermediate_Dir "Release"
 # PROP Target_Dir ""
+RSC=rc.exe
+# ADD BASE RSC /l 0x409 /d "NDEBUG"
+# ADD RSC /l 0x409 /d "NDEBUG"
 # ADD BASE CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "_LIB" /YX /FD /c
 # ADD CPP /nologo /GX /O2 /I "." /D "NDEBUG" /D "FPM_INTEL" /D "WIN32" /D "_MBCS" /D "_LIB" /D "HAVE_CONFIG_H" /D "ASO_ZEROCHECK" /FD /c
 # SUBTRACT CPP /YX
-# ADD BASE RSC /l 0x409 /d "NDEBUG"
-# ADD RSC /l 0x409 /d "NDEBUG"
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
@@ -64,11 +63,12 @@
 # PROP Output_Dir "Debug"
 # PROP Intermediate_Dir "Debug"
 # PROP Target_Dir ""
-# ADD BASE CPP /nologo /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /YX /FD /GZ /c
-# ADD CPP /nologo /Gm /GX /ZI /Od /I "." /D "FPM_DEFAULT" /D "_LIB" /D "HAVE_CONFIG_H" /D "ASO_ZEROCHECK" /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "DEBUG" /FD /GZ /c
-# SUBTRACT CPP /YX
+RSC=rc.exe
 # ADD BASE RSC /l 0x409 /d "_DEBUG"
 # ADD RSC /l 0x409 /d "_DEBUG"
+# ADD BASE CPP /nologo /W3 /GX /Od /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /YX /FD /ZI /GZ /c
+# ADD CPP /nologo /GX /O2 /I "." /D "FPM_DEFAULT" /D "_LIB" /D "HAVE_CONFIG_H" /D "ASO_ZEROCHECK" /D "WIN32" /D "_MBCS" /FD /ZI /GZ /c
+# SUBTRACT CPP /Z<none> /Fr /YX
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
diff -u -r -N mad-0.14.2b.orig/msvc++/libmad/libmad.plg mad-0.14.2b/msvc++/libmad/libmad.plg
--- mad-0.14.2b.orig/msvc++/libmad/libmad.plg	Thu Jan  1 01:00:00 1970
+++ mad-0.14.2b/msvc++/libmad/libmad.plg	Wed Aug  7 03:30:47 2002
@@ -0,0 +1,59 @@
+--------------------Configuration: libmad - Win32 Debug--------------------
+Begining build with project "M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\msvc++\libmad\libmad.dsp", at root.
+Active configuration is Win32 (x86) Static Library (based on Win32 (x86) Static Library)
+
+Project's tools are:
+			" (rc.exe)" with flags "/l 0x409 /d "_DEBUG" "
+			"32-bit C/C++ Compiler for 80x86" with flags "/nologo /MLd /GX /O2 /I "." /D "FPM_DEFAULT" /D "_LIB" /D "HAVE_CONFIG_H" /D "ASO_ZEROCHECK" /D "WIN32" /D "_MBCS" /Fo"Debug/" /Fd"Debug/" /FD /ZI /GZ /c "
+			"Browser Database Maker" with flags "/nologo /o"Debug/libmad.bsc" "
+			"Library Manager" with flags "/nologo /out:"Debug\libmad.lib" "
+			"Custom Build" with flags ""
+			"<Component 0xa>" with flags ""
+
+Creating temp file "C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP42B.tmp" with contents </nologo /MLd /GX /O2 /I "." /D "FPM_DEFAULT" /D "_LIB" /D "HAVE_CONFIG_H" /D "ASO_ZEROCHECK" /D "WIN32" /D "_MBCS" /Fo"Debug/" /Fd"Debug/" /FD /ZI /GZ /c 
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libmad\bit.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libmad\decoder.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libmad\fixed.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libmad\frame.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libmad\huffman.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libmad\layer12.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libmad\layer3.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libmad\stream.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libmad\synth.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libmad\timer.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libmad\version.c"
+>
+Creating command line "cl.exe @C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP42B.tmp" 
+Creating temp file "C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP42C.tmp" with contents </nologo /out:"Debug\libmad.lib" 
+".\Debug\bit.obj"
+".\Debug\decoder.obj"
+".\Debug\fixed.obj"
+".\Debug\frame.obj"
+".\Debug\huffman.obj"
+".\Debug\layer12.obj"
+".\Debug\layer3.obj"
+".\Debug\stream.obj"
+".\Debug\synth.obj"
+".\Debug\timer.obj"
+".\Debug\version.obj">
+Creating command line "link.exe -lib @C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP42C.tmp" 
+Compiling...
+Command line warning D4002 : ignoring unknown option '/ZI'
+Command line warning D4002 : ignoring unknown option '/GZ'
+bit.c
+decoder.c
+fixed.c
+frame.c
+huffman.c
+layer12.c
+layer3.c
+stream.c
+synth.c
+timer.c
+version.c
+Generating Code...
+Creating library...
+
+
+
+libmad.lib - 0 error(s), 2 warning(s)
diff -u -r -N mad-0.14.2b.orig/msvc++/libmad/mad.h mad-0.14.2b/msvc++/libmad/mad.h
--- mad-0.14.2b.orig/msvc++/libmad/mad.h	Fri Nov  9 03:39:16 2001
+++ mad-0.14.2b/msvc++/libmad/mad.h	Thu Aug  8 04:38:14 2002
@@ -183,8 +183,12 @@
 
 #  if defined(_MSC_VER)
 #   pragma warning(push)
-#   pragma warning(disable: 4035)  /* no return value */
-static __forceinline
+#   pragma warning(disable: 4035)  /* no return value */
+#   if (_MSC_VER > 1100)
+static __forceinline
+#   else
+static __inline
+#   endif
 mad_fixed_t mad_f_mul_inline(mad_fixed_t x, mad_fixed_t y)
 {
   enum {
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/adler32.obj and mad-0.14.2b/msvc++/libz/Debug/adler32.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/compress.obj and mad-0.14.2b/msvc++/libz/Debug/compress.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/crc32.obj and mad-0.14.2b/msvc++/libz/Debug/crc32.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/deflate.obj and mad-0.14.2b/msvc++/libz/Debug/deflate.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/gzio.obj and mad-0.14.2b/msvc++/libz/Debug/gzio.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/infblock.obj and mad-0.14.2b/msvc++/libz/Debug/infblock.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/infcodes.obj and mad-0.14.2b/msvc++/libz/Debug/infcodes.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/inffast.obj and mad-0.14.2b/msvc++/libz/Debug/inffast.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/inflate.obj and mad-0.14.2b/msvc++/libz/Debug/inflate.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/inftrees.obj and mad-0.14.2b/msvc++/libz/Debug/inftrees.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/infutil.obj and mad-0.14.2b/msvc++/libz/Debug/infutil.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/libz.lib and mad-0.14.2b/msvc++/libz/Debug/libz.lib differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/maketree.obj and mad-0.14.2b/msvc++/libz/Debug/maketree.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/trees.obj and mad-0.14.2b/msvc++/libz/Debug/trees.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/uncompr.obj and mad-0.14.2b/msvc++/libz/Debug/uncompr.obj differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/vc50.idb and mad-0.14.2b/msvc++/libz/Debug/vc50.idb differ
Binary files mad-0.14.2b.orig/msvc++/libz/Debug/zutil.obj and mad-0.14.2b/msvc++/libz/Debug/zutil.obj differ
diff -u -r -N mad-0.14.2b.orig/msvc++/libz/libz.dsp mad-0.14.2b/msvc++/libz/libz.dsp
--- mad-0.14.2b.orig/msvc++/libz/libz.dsp	Thu Oct 18 22:36:28 2001
+++ mad-0.14.2b/msvc++/libz/libz.dsp	Wed Aug  7 03:43:02 2002
@@ -1,5 +1,5 @@
 # Microsoft Developer Studio Project File - Name="libz" - Package Owner=<4>
-# Microsoft Developer Studio Generated Build File, Format Version 6.00
+# Microsoft Developer Studio Generated Build File, Format Version 5.00
 # ** DO NOT EDIT **
 
 # TARGTYPE "Win32 (x86) Static Library" 0x0104
@@ -22,11 +22,9 @@
 !MESSAGE 
 
 # Begin Project
-# PROP AllowPerConfigDependencies 0
 # PROP Scc_ProjName ""
 # PROP Scc_LocalPath ""
 CPP=cl.exe
-RSC=rc.exe
 
 !IF  "$(CFG)" == "libz - Win32 Release"
 
@@ -40,11 +38,12 @@
 # PROP Output_Dir "Release"
 # PROP Intermediate_Dir "Release"
 # PROP Target_Dir ""
+RSC=rc.exe
+# ADD BASE RSC /l 0x409 /d "NDEBUG"
+# ADD RSC /l 0x409 /d "NDEBUG"
 # ADD BASE CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "_LIB" /YX /FD /c
 # ADD CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "_LIB" /FD /c
 # SUBTRACT CPP /YX
-# ADD BASE RSC /l 0x409 /d "NDEBUG"
-# ADD RSC /l 0x409 /d "NDEBUG"
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
@@ -64,11 +63,12 @@
 # PROP Output_Dir "Debug"
 # PROP Intermediate_Dir "Debug"
 # PROP Target_Dir ""
-# ADD BASE CPP /nologo /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /YX /FD /GZ /c
-# ADD CPP /nologo /W2 /Gm /GX /ZI /Od /D "_LIB" /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "DEBUG" /FD /GZ /c
-# SUBTRACT CPP /YX
+RSC=rc.exe
 # ADD BASE RSC /l 0x409 /d "_DEBUG"
 # ADD RSC /l 0x409 /d "_DEBUG"
+# ADD BASE CPP /nologo /W3 /GX /Od /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /YX /FD /ZI /GZ /c
+# ADD CPP /nologo /W2 /GX /O2 /D "_LIB" /D "WIN32" /D "_MBCS" /FD /ZI /GZ /c
+# SUBTRACT CPP /Z<none> /Fr /YX
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
diff -u -r -N mad-0.14.2b.orig/msvc++/libz/libz.plg mad-0.14.2b/msvc++/libz/libz.plg
--- mad-0.14.2b.orig/msvc++/libz/libz.plg	Thu Jan  1 01:00:00 1970
+++ mad-0.14.2b/msvc++/libz/libz.plg	Wed Aug  7 03:30:52 2002
@@ -0,0 +1,71 @@
+--------------------Configuration: libz - Win32 Debug--------------------
+Begining build with project "M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\msvc++\libz\libz.dsp", at root.
+Active configuration is Win32 (x86) Static Library (based on Win32 (x86) Static Library)
+
+Project's tools are:
+			" (rc.exe)" with flags "/l 0x409 /d "_DEBUG" "
+			"32-bit C/C++ Compiler for 80x86" with flags "/nologo /MLd /W2 /GX /O2 /D "_LIB" /D "WIN32" /D "_MBCS" /Fo"Debug/" /Fd"Debug/" /FD /ZI /GZ /c "
+			"Browser Database Maker" with flags "/nologo /o"Debug/libz.bsc" "
+			"Library Manager" with flags "/nologo /out:"Debug\libz.lib" "
+			"Custom Build" with flags ""
+			"<Component 0xa>" with flags ""
+
+Creating temp file "C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP42D.tmp" with contents </nologo /MLd /W2 /GX /O2 /D "_LIB" /D "WIN32" /D "_MBCS" /Fo"Debug/" /Fd"Debug/" /FD /ZI /GZ /c 
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\adler32.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\compress.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\crc32.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\deflate.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\gzio.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\infblock.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\infcodes.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\inffast.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\inflate.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\inftrees.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\infutil.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\maketree.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\trees.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\uncompr.c"
+"M:\CO\JAVA\JAVAGUI\MAD\mad-0.14.2b\libz\zutil.c"
+>
+Creating command line "cl.exe @C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP42D.tmp" 
+Creating temp file "C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP42E.tmp" with contents </nologo /out:"Debug\libz.lib" 
+".\Debug\adler32.obj"
+".\Debug\compress.obj"
+".\Debug\crc32.obj"
+".\Debug\deflate.obj"
+".\Debug\gzio.obj"
+".\Debug\infblock.obj"
+".\Debug\infcodes.obj"
+".\Debug\inffast.obj"
+".\Debug\inflate.obj"
+".\Debug\inftrees.obj"
+".\Debug\infutil.obj"
+".\Debug\maketree.obj"
+".\Debug\trees.obj"
+".\Debug\uncompr.obj"
+".\Debug\zutil.obj">
+Creating command line "link.exe -lib @C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\RSP42E.tmp" 
+Compiling...
+Command line warning D4002 : ignoring unknown option '/ZI'
+Command line warning D4002 : ignoring unknown option '/GZ'
+adler32.c
+compress.c
+crc32.c
+deflate.c
+gzio.c
+infblock.c
+infcodes.c
+inffast.c
+inflate.c
+inftrees.c
+infutil.c
+maketree.c
+trees.c
+uncompr.c
+zutil.c
+Generating Code...
+Creating library...
+
+
+
+libz.lib - 0 error(s), 2 warning(s)
diff -u -r -N mad-0.14.2b.orig/player.c mad-0.14.2b/player.c
--- mad-0.14.2b.orig/player.c	Fri Nov  9 05:54:34 2001
+++ mad-0.14.2b/player.c	Thu Aug  8 03:34:47 2002
@@ -81,7 +81,16 @@
 # include "resample.h"
 # include "id3tag.h"
 # include "filter.h"
-# include "equalizer.h"
+# include "equalizer.h"
+
+# if defined(JNI)
+# include <jni.h>
+# include "MAD_MadPlayer.h"
+# include "jnidefs.h"
+extern JNIEnv *_env;
+extern jobject _jobj;
+# endif
+
 
 # define MPEG_BUFSZ	40000	/* 2.5 s at 128 kbps; 1 s at 320 kbps */
 # define FREQ_TOLERANCE	6	/* percent sampling frequency tolerance */
@@ -107,6 +116,11 @@
 static struct termios save_tty;
 static struct sigaction save_sigtstp, save_sigint;
 # endif
+
+# if defined(JNI)
+#  include <jni.h>
+#  include "MAD_MadPlayer.h"
+# endif
 
 /*
  * NAME:	player_init()
@@ -201,12 +215,13 @@
 /*
  * NAME:	message()
  * DESCRIPTION:	show a message, possibly overwriting a previous w/o newline
- */
-static
+ */
+static
 int message(char const *format, ...)
-{
+{
+# if !defined(JNI)
   int len, newline, result;
-  va_list args;
+  va_list args;
 
   len = strlen(format);
   newline = (len > 0 && format[len - 1] == '\n');
@@ -214,8 +229,8 @@
   if (on_same_line && newline && len > 1)
     fputc('\n', stderr);
 
-  va_start(args, format);
-  result = vfprintf(stderr, format, args);
+  va_start(args, format);
+  result = vfprintf(stderr, format, args);
   va_end(args);
 
   if (on_same_line && !newline && result < on_same_line) {
@@ -233,8 +248,72 @@
     fflush(stderr);
   }
 
-  return result;
-}
+  return result;
+# elif defined(JNI)
+  int len, newline, result;
+  va_list args;
+  char buffer[256];
+  jclass cls;
+  jmethodID mid;
+  jstring jstr;
+
+  strcpy(buffer, "");
+
+  len = strlen(format);
+  newline = (len > 0 && format[len - 1] == '\n');
+
+  if (on_same_line && newline && len > 1)
+    strcat(buffer, "\n");
+
+  va_start(args, format);
+  result = vsprintf(buffer+strlen(buffer), format, args);
+  va_end(args);
+
+  if (on_same_line && !newline && result < on_same_line) {
+    unsigned int i;
+	int _len;
+
+    i = on_same_line - result;
+	_len = strlen(buffer);
+    while (i--)
+	  buffer[_len++] = ' ';
+    buffer[_len] = '\0';
+  }
+
+  on_same_line = newline ? 0 : result;
+
+  if (!newline)
+    strcat(buffer, "\r");
+
+  /* finally, do the JNI call */
+  if(!fireMadEvent(buffer))
+	return -1;
+
+  return result;
+# endif
+}
+
+# if defined(JNI)
+/**
+ * Send status/error message (incl. play position)
+ * to calling Java class.
+ */
+static
+int fireMadEvent(char* msg) {
+  jclass cls;
+  jmethodID mid;
+  jstring jstr;
+
+  cls = (*_env)->GetObjectClass(_env, _jobj);
+  mid = (*_env)->GetMethodID(_env, cls,
+						JNI_FIREMADEVENT_METHODNAME, JNI_FIREMADEVENT_ARGS);
+  if (mid == 0)
+    return 0;
+  jstr = (*_env)->NewStringUTF(_env, msg);
+  (*_env)->CallVoidMethod(_env, _jobj, mid, jstr);
+  return 1;
+}
+# endif
 
 /*
  * NAME:	error()
@@ -1399,14 +1478,26 @@
   return result;
 }
 
-# if defined(USE_TTY)
+# if defined(USE_TTY) || defined(JNI)
 /*
  * NAME:	readkey()
  * DESCRIPTION:	read a keypress from the keyboard
  */
 static
 int readkey(int blocking)
-{
+{
+# if defined(JNI)
+  
+  jclass cls = (*_env)->GetObjectClass(_env, _jobj);
+  jmethodID mid = (*_env)->GetMethodID(_env, cls,
+						JNI_READKEY_METHODNAME, JNI_READKEY_ARGS);
+  if (mid == 0) {
+    error("JNI", "Cannot access calling class' readkey() method!");
+    return -1;
+  }
+  return (int) (*_env)->CallIntMethod(_env, _jobj, mid, (jint) blocking);
+  
+# elif !defined(JNI)
 # if !defined(_WIN32)
   unsigned char key;
   ssize_t count;
@@ -1503,6 +1594,7 @@
 
   return (unsigned char) input.Event.KeyEvent.uChar.AsciiChar;
 # endif
+# endif // !defined(JNI)
 
   return blocking ? -1 : 0;
 }
@@ -1668,7 +1760,7 @@
 
     for (sb = 0; sb < 32; ++sb) {
       attenuation.bandfactors[0][sb] =
-      attenuation.bandfactors[1][sb] = player->output.attenuation;
+	attenuation.bandfactors[1][sb] = player->output.attenuation;
     }
 
     if (addfilter(player, equalizer_filter, &attenuation) == -1)
diff -u -r -N mad-0.14.2b.orig/player.h mad-0.14.2b/player.h
--- mad-0.14.2b.orig/player.h	Thu Nov  1 21:27:32 2001
+++ mad-0.14.2b/player.h	Thu Aug  8 02:57:58 2002
@@ -31,6 +31,12 @@
 # include "resample.h"
 # include "filter.h"
 # include "xing.h"
+
+# ifdef JNI
+#  include <jni.h>
+#  include "MAD_MadPlayer.h"
+int fireMsgEvent(char* msg);
+# endif
 
 enum {
   PLAYER_OPTION_SHUFFLE      = 0x0001,
@@ -75,7 +81,8 @@
   STATS_SHOW_REMAINING
 };
 
-struct player {
+struct player {
+
   int verbosity;
 
   int options;
